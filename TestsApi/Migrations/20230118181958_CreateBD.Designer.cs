// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestsApi.Models;

#nullable disable

namespace TestsApi.Migrations
{
    [DbContext(typeof(TestsContext))]
    [Migration("20230118181958_CreateBD")]
    partial class CreateBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("TestsApi.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Ответ 1 на вопрос 1",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Ответ 2 на вопрос 1",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Ответ 3 на вопрос 1",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Ответ 1 на вопрос 2",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "Ответ 2 на вопрос 2",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "Ответ 3 на вопрос 2",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Ответ 1 на вопрос 3",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "Ответ 2 на вопрос 3",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "Ответ 3 на вопрос 3",
                            QuestionId = 3
                        });
                });

            modelBuilder.Entity("TestsApi.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int>("TestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Вопрос 1 на тест А.",
                            TestId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Вопрос 2 на тест А.",
                            TestId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Вопрос 3 на тест А.",
                            TestId = 1
                        });
                });

            modelBuilder.Entity("TestsApi.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ClosedTestTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResultContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int>("TestId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("TestsApi.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "AAAAAA",
                            Name = "Тест А",
                            createdDate = new DateTime(2023, 1, 18, 21, 19, 58, 234, DateTimeKind.Local).AddTicks(6468)
                        });
                });

            modelBuilder.Entity("TestsApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "tommi",
                            Name = "Tom",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Login = "bobbi",
                            Name = "Bob",
                            Password = "123"
                        },
                        new
                        {
                            Id = 3,
                            Login = "sammi",
                            Name = "Sam",
                            Password = "123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
